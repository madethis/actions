name: Branch pull request
description: Create pull requests automatically
inputs:
  token:
    description: Token for github cli tool
    required: true
  source:
    description: branch where we want to merge from
    required: true
  target:
    description: branch where we want to merge to
    required: true
runs:
  using: "composite"
  steps:
  - name: check if pr exists
    shell: bash
    id: check
    env:
      GITHUB_TOKEN: ${{ inputs.token }}
    run: |
      prs=$(gh pr list \
          --repo "$GITHUB_REPOSITORY" \
          --head "${{ inputs.source }}" \
          --base "${{ inputs.target }}" \
          --json title \
          --jq 'length')

      if ((prs > 0)); then
          echo "skip=true" >> "$GITHUB_OUTPUT"
      fi

  - name: create pr
    if: "!steps.check.outputs.skip"
    uses: actions/github-script@v7
    env:
      GITHUB_TOKEN: ${{ inputs.token }}
    with:
      script: |
        const inputs = ${{ toJson(inputs) }};

        const [project, number, ...rest] = inputs.source.split("-");

        const key = `${project.toUpperCase()}-${number}`;

        const title = `${key} - ${rest.join(" ")}`;

        cmd = ["gh", [
          ...("pr create --draft --base".split(" ")),
          inputs.target,
          "--head", inputs.source,
          "--title", title,
          "--body", "PR created automatically, please update description"
        ]];


        try {
          await exec(...cmd);
        } catch (error) {
          exec(`git commit -m "Start ${key}" --allow-empty`);
          await exec(...cmd);
        }
